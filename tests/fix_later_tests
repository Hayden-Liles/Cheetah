#[test]
        fn test_comprehension_conditions1() {
            // Test simple condition first
            println!("\n===== Testing simple condition =====");
            assert_parses_and_prints("[x for x in range(100) if x % 2 == 0]");
        }
        #[test]
        fn test_comprehension_conditions2() {            
            // Test multiple conditions
            println!("\n===== Testing multiple conditions =====");
            assert_parses_and_prints("[x for x in range(100) if x % 2 == 0 if x % 3 == 0]");
        }
        #[test]
        fn test_comprehension_conditions3() {            
            // Test nested function calls (without comprehension in function)
            println!("\n===== Testing nested function call =====");
            assert_parses_and_prints("[x for x in range(100) if int(x ** 0.5) > 5]");
        }
        #[test]
        fn test_comprehension_conditions4() {            
            // Test comprehension inside function call (the problematic case)
            println!("\n===== Testing comprehension in function argument =====");
            assert_parses_and_prints("[x for x in range(100) if all(x % i != 0 for i in range(2, int(x ** 0.5) + 1))]");
        }